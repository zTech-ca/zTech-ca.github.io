{"version":3,"sources":["reducers/modalReducer.js","actions/types.js","reducers/index.js","store.js","view/components/NavBar/index.js","view/components/Footer/index.js","view/pages/Home/index.js","view/pages/AboutUs/index.js","view/pages/Estimate/index.js","view/components/Modal/index.js","actions/modalActions.js","App.js","serviceWorker.js","index.js"],"names":["initialState","mode","modalReducer","state","action","type","combineReducers","modal","middleware","thunk","store","createStore","rootReducer","applyMiddleware","pageList","Home","display","path","AboutUs","Estimate","NavBar","className","Object","keys","map","item","index","key","onClick","console","log","id","IconButton","edge","color","aria-label","this","getPageItems","loginClicked","contactRequested","React","Component","Footer","style","margin","objectFit","width","height","alt","src","Modal","setWrapperRef","bind","handleClickOutside","document","addEventListener","removeEventListener","node","wrapperRef","event","contains","target","props","hideModal","ref","connect","dispatch","App","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qWAEMA,EAAe,CACnBC,MAAM,GAYOC,EATM,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCACrD,OAAQA,EAAOC,MACb,ICRqB,YDSnB,OAAO,eAAKF,EAAZ,CAAmBF,KAAM,OAC3B,QACE,OAAOE,IEREG,cAAgB,CAC7BC,MAAOL,ICAHM,EAAa,CAACC,KAILC,EAFDC,YAAYC,EAAa,GAAIC,IAAe,WAAf,EAAmBL,I,yBCDxDM,G,MAAW,CACfC,KAAM,CAAEC,QAAS,OAAQC,KAAM,IAC/BC,QAAS,CAAEF,QAAS,WAAYC,KAAM,IACtCE,SAAU,CAAEH,QAAS,iBAAkBC,KAAM,MAG1BG,E,uLAEjB,OACE,wBAAIC,UAAU,aACXC,OAAOC,KAAKT,GAAUU,KAAI,SAACC,EAAMC,GAChC,OACE,yBAAKC,IAAKF,GACPC,EAAQ,GAAK,0BAAML,UAAU,cAAhB,KACd,wBACEA,UAAU,aACVO,QAAS,WACPC,QAAQC,IAAI,2BAGbhB,EAASW,GAAMT,gB,yCAU5Ba,QAAQC,IAAI,6B,qCAIZD,QAAQC,IAAI,8B,+BAIZ,OACE,oCACE,yBAAKC,GAAG,WACN,yBAAKV,UAAU,gBACb,kBAACW,EAAA,EAAD,CACEC,KAAK,QACLZ,UAAU,gBACVa,MAAM,UACNC,aAAW,QAEX,kBAAC,IAAD,OAEDC,KAAKC,gBAER,yBAAKhB,UAAU,iBACb,yBAAKO,QAASQ,KAAKE,aAAcjB,UAAU,cAA3C,SAGA,yBAAKO,QAASQ,KAAKG,iBAAkBlB,UAAU,cAA/C,gBAKJ,yBAAKU,GAAG,oB,GAvDoBS,IAAMC,WCRrBC,G,uLAEjB,OACE,yBAAKX,GAAG,UACN,mDACA,8E,GAL4BS,IAAMC,YCDrB1B,E,iLAEjB,OACE,6BACE,kDACA,kGAGA,wBACE4B,MAAO,CACLC,OAAQ,QAFZ,OAOA,wBAAID,MAAO,CAAEC,OAAQ,WAArB,uBACA,wBAAID,MAAO,CAAEC,OAAQ,QAArB,2DAGA,yBACED,MAAO,CACLE,UAAW,QACXC,MAAO,QACPC,OAAQ,SAEVC,IAAI,eACJC,IAAI,6BAEN,uIAIA,wBAAIN,MAAO,CAAEC,OAAQ,QAArB,yBACA,wBAAID,MAAO,CAAEC,OAAQ,WAArB,iBACA,wBAAID,MAAO,CAAEC,OAAQ,QAArB,0CAGA,yBACED,MAAO,CACLE,UAAW,QACXC,MAAO,QACPC,OAAQ,SAEVC,IAAI,iBACJC,IAAI,+BAEN,iF,GA9C0BT,IAAMC,WCAnBvB,E,iLAEjB,OACE,6BACE,gD,GAJ6BsB,IAAMC,WCAtBtB,E,iLAEjB,OAAO,gE,GAF2BqB,IAAMC,W,QCGtCS,G,kBACJ,aAAe,IAAD,8BACZ,+CACKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBAHd,E,iFAOZE,SAASC,iBAAiB,YAAanB,KAAKiB,sB,6CAI5CC,SAASE,oBAAoB,YAAapB,KAAKiB,sB,oCAGnCI,GACZrB,KAAKsB,WAAaD,I,yCAGDE,GACbvB,KAAKsB,aAAetB,KAAKsB,WAAWE,SAASD,EAAME,SACrDzB,KAAK0B,MAAMC,c,+BAKb,OAAK3B,KAAK0B,MAAMvD,MAGd,yBAAKwB,GAAG,SACN,yBAAKA,GAAG,gBAAgBiC,IAAK5B,KAAKe,eAChC,4BAAQ9B,UAAU,cAAcO,QAASQ,KAAK0B,MAAMC,WAApD,QAGA,gDARwB,S,GA1BdvB,IAAMC,YA6CXwB,eAJS,SAAA9D,GAAK,MAAK,CAChCI,MAAOJ,EAAMI,MAAMN,QAGmB,CAAE8D,UChDjB,kBAAM,SAAAG,GAC7BA,EAAS,CAAE7D,KTHY,iBQkDV4D,CAAwCf,GEvClCiB,E,YACnB,aAAe,IAAD,6BACZ,8CACAtC,QAAQC,IAAI,8BACZD,QAAQC,IACN,iFAJU,E,sEASZ,OACE,kBAAC,IAAD,CAAUpB,MAAOA,GACf,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOO,KAAK,IAAImD,OAAK,EAACC,UAAWtD,IACjC,kBAAC,IAAD,CAAOE,KAAK,WAAWmD,OAAK,EAACC,UAAWnD,IACxC,kBAAC,IAAD,CAAOD,KAAK,YAAYmD,OAAK,EAACC,UAAWlD,KAE3C,kBAAC,EAAD,W,GAnByBqB,IAAMC,WCCnB6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAStB,SAASuB,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e09899dc.chunk.js","sourcesContent":["import { MODAL_OFF } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  mode: true\r\n};\r\n\r\nconst modalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case MODAL_OFF:\r\n      return { ...state, mode: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default modalReducer;\r\n","export const MODAL_OFF = \"MODAL_OFF\";\r\n","import { combineReducers } from \"redux\";\r\nimport modalReducer from \"./modalReducer\";\r\n\r\nexport default combineReducers({\r\n  modal: modalReducer\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, {}, applyMiddleware(...middleware));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport \"./navbar.scss\";\r\n\r\nconst pageList = {\r\n  Home: { display: \"Home\", path: \"\" },\r\n  AboutUs: { display: \"About us\", path: \"\" },\r\n  Estimate: { display: \"Get your quote\", path: \"\" }\r\n};\r\n\r\nexport default class NavBar extends React.Component {\r\n  getPageItems() {\r\n    return (\r\n      <ul className=\"page-list\">\r\n        {Object.keys(pageList).map((item, index) => {\r\n          return (\r\n            <div key={item}>\r\n              {index > 0 && <span className=\"nav-spacer\">|</span>}\r\n              <li\r\n                className=\"nav-button\"\r\n                onClick={() => {\r\n                  console.log(\"Let us run the script\");\r\n                }}\r\n              >\r\n                {pageList[item].display}\r\n              </li>\r\n            </div>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  contactRequested() {\r\n    console.log(\"now start contacting us\");\r\n  }\r\n\r\n  loginClicked() {\r\n    console.log(\"clicked the login button\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"nav-bar\">\r\n          <div className=\"nav-bar-left\">\r\n            <IconButton\r\n              edge=\"start\"\r\n              className=\"nav-menu-icon\"\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            {this.getPageItems()}\r\n          </div>\r\n          <div className=\"nav-bar-right\">\r\n            <div onClick={this.loginClicked} className=\"nav-button\">\r\n              Login\r\n            </div>\r\n            <div onClick={this.contactRequested} className=\"nav-button\">\r\n              Contact Us\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"nav-spacer\" />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// import React from \"react\";\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import AppBar from \"@material-ui/core/AppBar\";\r\n// import Toolbar from \"@material-ui/core/Toolbar\";\r\n// import Typography from \"@material-ui/core/Typography\";\r\n// import Button from \"@material-ui/core/Button\";\r\n// import IconButton from \"@material-ui/core/IconButton\";\r\n// import MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//   root: {\r\n//     flexGrow: 1\r\n//   },\r\n//   menuButton: {\r\n//     marginRight: theme.spacing(2)\r\n//   },\r\n//   title: {\r\n//     flexGrow: 1\r\n//   }\r\n// }));\r\n\r\n// export default function NavBar() {\r\n//   const classes = useStyles();\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <AppBar position=\"static\">\r\n//         <Toolbar>\r\n//           <IconButton\r\n//             edge=\"start\"\r\n//             className={classes.menuButton}\r\n//             color=\"inherit\"\r\n//             aria-label=\"menu\"\r\n//           >\r\n//             <MenuIcon />\r\n//           </IconButton>\r\n//           <Typography variant=\"h6\" className={classes.title}>\r\n//             Home\r\n//           </Typography>\r\n//           <Typography variant=\"h6\" className={classes.title}>\r\n//             About Us\r\n//           </Typography>\r\n//           <Typography variant=\"h6\" className={classes.title}>\r\n//             About Us\r\n//           </Typography>\r\n//           <Button color=\"inherit\">Login</Button>\r\n//         </Toolbar>\r\n//       </AppBar>\r\n//     </div>\r\n//   );\r\n// }\r\n","import React from \"react\";\r\nimport \"./footer.scss\";\r\n\r\nexport default class Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"footer\">\r\n        <div>A footer goes here</div>\r\n        <div>Put something like @Copyright zTech 2020</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>Welcome to zTech!</div>\r\n        <p>\r\n          Grow your brand today! Feel free to have a free consultation today!\r\n        </p>\r\n        <h2\r\n          style={{\r\n            margin: \"0 0\"\r\n          }}\r\n        >\r\n          CEO\r\n        </h2>\r\n        <h1 style={{ margin: \"10px 0\" }}>Viet-Nhien Tran Duc</h1>\r\n        <h3 style={{ margin: \"0 0\" }}>\r\n          Hello, I will be a prime minister of Canada in 30 years\r\n        </h3>\r\n        <img\r\n          style={{\r\n            objectFit: \"cover\",\r\n            width: \"300px\",\r\n            height: \"300px\"\r\n          }}\r\n          alt=\"nick-profile\"\r\n          src=\"/assets/members/nick.jpg\"\r\n        />\r\n        <p>\r\n          A very good software engineer. He will probably ask you for a lot\r\n          money but hey, it is worth every penny\r\n        </p>\r\n        <h2 style={{ margin: \"0 0\" }}>Employee of the month</h2>\r\n        <h1 style={{ margin: \"10px 0\" }}>Rahmat Saeedi</h1>\r\n        <h3 style={{ margin: \"0 0\" }}>\r\n          Thank you for buying your CEO a yatch!\r\n        </h3>\r\n        <img\r\n          style={{\r\n            objectFit: \"cover\",\r\n            width: \"300px\",\r\n            height: \"300px\"\r\n          }}\r\n          alt=\"rahmat-profile\"\r\n          src=\"/assets/members/rahmat.png\"\r\n        />\r\n        <p>Hi guys! You realize that this is just a joke</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class AboutUs extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>This is us</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Estimate extends React.Component {\r\n  render() {\r\n    return <div>Please pay us $1000 a month</div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./modal.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideModal } from \"../../../actions/modalActions\";\r\n\r\nclass Modal extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.setWrapperRef = this.setWrapperRef.bind(this);\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  setWrapperRef(node) {\r\n    this.wrapperRef = node;\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      this.props.hideModal();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.modal) return null;\r\n\r\n    return (\r\n      <div id=\"modal\">\r\n        <div id=\"modal-content\" ref={this.setWrapperRef}>\r\n          <button className=\"modal-close\" onClick={this.props.hideModal}>\r\n            &times;\r\n          </button>\r\n          <p>Connect netlify</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  modal: state.modal.mode\r\n});\r\n\r\nexport default connect(mapStateToProps, { hideModal })(Modal);\r\n","import { MODAL_OFF } from \"./types\";\r\n\r\nexport const hideModal = () => dispatch => {\r\n  dispatch({ type: MODAL_OFF });\r\n};\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport store from \"./store\";\r\nimport NavBar from \"./view/components/NavBar\";\r\nimport Footer from \"./view/components/Footer\";\r\nimport Home from \"./view/pages/Home\";\r\nimport AboutUs from \"./view/pages/AboutUs\";\r\nimport Estimate from \"./view/pages/Estimate\";\r\nimport Modal from \"./view/components/Modal\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    console.log(\"Starting the entire app...\");\r\n    console.log(\r\n      \"Here, the app should start making api call to check for use regsitration etc.\"\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <NavBar />\r\n        <Modal />\r\n        <BrowserRouter>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/aboutus\" exact component={AboutUs} />\r\n          <Route path=\"/estimate\" exact component={Estimate} />\r\n        </BrowserRouter>\r\n        <Footer />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}