{"version":3,"sources":["view/components/NavBar/index.js","actions/navActions.js","actions/types.js","view/components/Footer/index.js","view/pages/Home/index.js","view/pages/AboutUs/index.js","view/pages/Estimate/index.js","view/components/Modal/Contact.js","view/components/Modal/Login.js","view/components/Modal/index.js","actions/modalActions.js","constants/modalModes.js","serviceWorker.js","reducers/modalReducer.js","reducers/index.js","store.js","index.js","App.js"],"names":["pageList","Home","display","path","AboutUs","Estimate","NavBar","dispatch","useDispatch","id","className","IconButton","edge","color","aria-label","Object","keys","map","item","index","key","onClick","console","log","type","Footer","style","margin","objectFit","width","height","alt","src","Contact","Login","Modal","mode","useSelector","state","modal","ref","useRef","handleClick","event","current","contains","target","handleClickOutside","useEffect","document","addEventListener","removeEventListener","Boolean","window","location","hostname","match","modalReducer","action","combineReducers","middleware","thunk","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","exact","component","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.27e94cdc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { openContactModal, openLoginModal } from '../../../actions/navActions'\r\nimport \"./navbar.scss\";\r\n\r\nconst pageList = {\r\n  Home: { display: \"Home\", path: \"\" },\r\n  AboutUs: { display: \"About us\", path: \"\" },\r\n  Estimate: { display: \"Get your quote\", path: \"\" }\r\n};\r\n\r\nexport default function NavBar () {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  function getPageItems() {\r\n    return (\r\n      <ul className=\"page-list\">\r\n        {Object.keys(pageList).map((item, index) => {\r\n          return (\r\n            <div key={item}>\r\n              {index > 0 && <span className=\"nav-spacer\">|</span>}\r\n              <li\r\n                className=\"nav-button\"\r\n                onClick={() => {\r\n                  console.log(\"Let us run the script\");\r\n                }}\r\n              >\r\n                {pageList[item].display}\r\n              </li>\r\n            </div>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"nav-bar\">\r\n        <div className=\"nav-bar-left\">\r\n          <IconButton\r\n            edge=\"start\"\r\n            className=\"nav-menu-icon\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {getPageItems()}\r\n        </div>\r\n        <div className=\"nav-bar-right\">\r\n          <div onClick={() => dispatch(openLoginModal())} className=\"nav-button\">\r\n            Login\r\n          </div>\r\n          <div onClick={() => dispatch(openContactModal())} className=\"nav-button\">\r\n            Contact Us\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"nav-spacer\" />\r\n    </>\r\n  );\r\n}\r\n","import { MODAL_CONTACT, MODAL_LOGIN } from \"./types\";\r\n\r\nexport const openContactModal = () => dispatch => {\r\n  dispatch({type: MODAL_CONTACT})\r\n}\r\n\r\nexport const openLoginModal = () => dispatch => {\r\n  dispatch({type: MODAL_LOGIN})\r\n}","export const MODAL_OFF = \"MODAL_OFF\";\r\n\r\nexport const MODAL_CONTACT = \"MODAL_CONTACT\";\r\n\r\nexport const MODAL_LOGIN = 'MODAL_LOGIN';","import React from \"react\";\r\nimport \"./footer.scss\";\r\n\r\nexport default function Footer () {\r\n  return (\r\n    <div id=\"footer\">\r\n      <div>A footer goes here</div>\r\n      <div>Put something like @Copyright zTech 2020</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Home () {\r\n  return (\r\n    <div>\r\n      <div>Welcome to zTech!</div>\r\n      <p>\r\n        Grow your brand today! Feel free to have a free consultation today!\r\n      </p>\r\n      <h2\r\n        style={{\r\n          margin: \"0 0\"\r\n        }}\r\n      >\r\n        CEO\r\n      </h2>\r\n      <h1 style={{ margin: \"10px 0\" }}>Viet-Nhien Tran Duc</h1>\r\n      <h3 style={{ margin: \"0 0\" }}>\r\n        Hello, I will be a prime minister of Canada in 30 years\r\n      </h3>\r\n      <img\r\n        style={{\r\n          objectFit: \"cover\",\r\n          width: \"300px\",\r\n          height: \"300px\"\r\n        }}\r\n        alt=\"nick-profile\"\r\n        src=\"/assets/members/nick.jpg\"\r\n      />\r\n      <p>\r\n        A very good software engineer. He will probably ask you for a lot\r\n        money but hey, it is worth every penny\r\n      </p>\r\n      <h2 style={{ margin: \"0 0\" }}>Employee of the month</h2>\r\n      <h1 style={{ margin: \"10px 0\" }}>Rahmat Saeedi</h1>\r\n      <h3 style={{ margin: \"0 0\" }}>\r\n        Thank you for buying your CEO a yatch!\r\n      </h3>\r\n      <img\r\n        style={{\r\n          objectFit: \"cover\",\r\n          width: \"300px\",\r\n          height: \"300px\"\r\n        }}\r\n        alt=\"rahmat-profile\"\r\n        src=\"/assets/members/rahmat.png\"\r\n      />\r\n      <p>Hi guys! You realize that this is just a joke</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function AboutUs () {\r\n  return (\r\n    <div>\r\n      <div>This is us</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Estimate () {\r\n    return <div>Please pay us $1000 a month</div>;\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Contact () {\r\n  return (\r\n    <div>\r\n      <h3>Contact him today to get a free consultation!</h3>\r\n      <h2>RAHMAT IS AWESOME!</h2>\r\n      <h1>780-406-2853</h1>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function Login () {\r\n  return (\r\n    <div>\r\n      <h2>Wait! Rahmat is in the process to buy the world's most advanced server machine!</h2>\r\n    </div>\r\n  )\r\n}","import React, {useEffect, useRef} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { hideModal } from \"../../../actions/modalActions\";\r\nimport { CONTACT, LOGIN } from '../../../constants/modalModes'\r\nimport Contact from './Contact'\r\nimport Login from './Login'\r\nimport \"./modal.scss\";\r\n\r\n\r\nexport default function Modal () {\r\n\r\n  const mode = useSelector(state => state.modal)\r\n  const dispatch = useDispatch()\r\n  const ref = useRef(null)\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClick)\r\n    return () => {\r\n      document.removeEventListener('click', handleClick)\r\n    }\r\n  })\r\n\r\n  function handleClick (event) {\r\n    if (ref.current && !ref.current.contains(event.target)) {\r\n      handleClickOutside()\r\n  }}\r\n\r\n  function handleClickOutside () {\r\n    dispatch(hideModal())\r\n  }\r\n  \r\n  return (\r\n    <div id=\"modal\">\r\n      <div id=\"modal-content\" ref={ref}>\r\n        <button className=\"modal-close\" onClick={handleClickOutside}>\r\n          &times;\r\n        </button>\r\n        {mode === CONTACT && <Contact />}\r\n        {mode === LOGIN && <Login />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { MODAL_OFF } from \"./types\";\r\n\r\nexport const hideModal = () => dispatch => {\r\n  dispatch({ type: MODAL_OFF });\r\n};\r\n","export const CONTACT = 'CONTACT'\r\nexport const LOGIN = 'LOGIN'","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { MODAL_OFF, MODAL_CONTACT, MODAL_LOGIN } from \"../actions/types\";\r\nimport { CONTACT, LOGIN } from '../constants/modalModes'\r\n\r\nconst initialState = null\r\n\r\nconst modalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case MODAL_OFF:\r\n      return null;\r\n    case MODAL_CONTACT:\r\n      return CONTACT\r\n    case MODAL_LOGIN:\r\n      return LOGIN\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default modalReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport modalReducer from \"./modalReducer\";\r\n\r\nexport default combineReducers({\r\n  modal: modalReducer\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, {}, applyMiddleware(...middleware));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport NavBar from \"./view/components/NavBar\";\r\nimport Footer from \"./view/components/Footer\";\r\nimport Home from \"./view/pages/Home\";\r\nimport AboutUs from \"./view/pages/AboutUs\";\r\nimport Estimate from \"./view/pages/Estimate\";\r\nimport Modal from \"./view/components/Modal\";\r\nimport { useSelector } from \"react-redux\"\r\n\r\nexport default function App () {\r\n\r\n  const mode = useSelector(state => state.modal)\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      {mode && <Modal />}\r\n      <BrowserRouter>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/aboutus\" exact component={AboutUs} />\r\n        <Route path=\"/estimate\" exact component={Estimate} />\r\n      </BrowserRouter>\r\n      <Footer />\r\n    </div>\r\n  );\r\n\r\n}\r\n"],"sourceRoot":""}